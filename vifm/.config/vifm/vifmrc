" -------------------------------- "
"        _  __                     "
" __   _(_)/ _|_ __ ___  _ __ ___  "
" \ \ / / | |_| '_ ` _ \| '__/ __| "
"  \ V /| |  _| | | | | | | | (__  "
"   \_/ |_|_| |_| |_| |_|_|  \___| "
"                                  "
" -------------------------------- "
" by nebulaeandstars@gmail.com


" ############################################################################ "
" # SETTINGS # SETTINGS # SETTINGS # SETTINGS # SETTINGS # SETTINGS ########## "
" ############################################################################ "

" text editor
set vicmd=nvim

" color scheme
colorscheme andromeda

" enables more efficient (but less UNIX-friendly) backend file management
set syscalls

" moves files to a temporary trash folder (for using d and p together, etc)
set trash

" history tracking
set history=100
set undolevels=100

" treat symlinks normally instead of changing to their actual directory
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" use a vim-like help system instead of normal text
set vimhelp

" run executables instead of trying to open them
set runexec

" time format
set timefmt="%d/%B/%Y, %I:%M%p"

" command mode suggestions
set wildmenu
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" use smartcase
set ignorecase
set smartcase

" don't highlight search results automatically
set nohlsearch

" search while typing
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif


" What should be saved automatically between vifm sessions.
set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" Set custom status line look
set statusline="%= %20d "




" ############################################################################ "
" # MARKS # MARKS # MARKS # MARKS # MARKS # MARKS # MARKS # MARKS # MARKS ####"
" ############################################################################ "

map ` '

mark h ~/
mark c ~/.config
mark d ~/.dotfiles
mark l ~/.local
mark s ~/.local/src
mark b ~/.local/bin




" ############################################################################ "
" # COMMANDS # COMMANDS # COMMANDS # COMMANDS # COMMANDS # COMMANDS ########## "
" ############################################################################ "

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart




" ############################################################################ "
" # FILEOPEN # FILEOPEN # FILEOPEN # FILEOPEN # FILEOPEN # FILEOPEN ########## "
" ############################################################################ "

" open these filetypes in the background using xdg-open
filextype *.mp4,*.jpg,*.png,*.pdf
    \ xdg-open &>/dev/null &

" open everything else in the terminal using xdg-open
filetype * xdg-open




" ############################################################################ "
" # FILEVIEW # FILEVIEW # FILEVIEW # FILEVIEW # FILEVIEW # FILEVIEW ########## "
" ############################################################################ "

fileviewer *.pdf
    \ vifmimg pdfpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer *.epub
    \ vifmimg epubpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
    \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
    \ vifmimg videopreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm
    \ vifmimg draw %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer *.gif
    \ vifmimg gifpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer *.ico
    \ vifmimg magickpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer <audio/*>
    \ vifmimg audiopreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

fileviewer <font/*>
    \ vifmimg fontpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear




" ############################################################################ "
" # MAPPINGS # MAPPINGS # MAPPINGS # MAPPINGS # MAPPINGS # MAPPINGS ########## "
" ############################################################################ "

" Start shell in current directory
nnoremap s :shell<cr>

" Open file in a text editor
nnoremap o :!$EDITOR %f<cr>
" Open file in a text editor in a new terminal
nnoremap O :!setsid $TERMINAL -e $EDITOR %f & disown<cr>
" Display sorting dialog

" Open file in the background using its default program
nnoremap gb :file &<cr>l
" Open file using xdg-open in another terminal
nnoremap go :!setsid $TERMINAL -e xdg-open %f &>/dev/null &<cr>

" Open current directory in sxiv
nnoremap gi :!sxiv -t %d &>/dev/null &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>

" Select all files in a directory
nnoremap ,a ggvG
vnoremap ,a <esc>ggvG

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

nnoremap S :sort<cr>

" Toggle wrap setting on ,w
nnoremap ,w :set wrap!<cr>

nnoremap > :!vifmimg inc<CR>
nnoremap < :!vifmimg dec<CR>

nnoremap ,q :quit<CR>
